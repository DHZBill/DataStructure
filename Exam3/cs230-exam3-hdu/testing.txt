Welcome to DrJava.  Working directory is /Users/DHZ_Bill/Olin/DataStructure/Exam3/cs230-exam3-hdu
> run Exam3Testing

*****************************************************

************* Sample Testing for Exam 3 *************
*****************************************************
Notation: (expected result: )  [actual result]


i B C D E F 
B - 1 - - - 
C 1 - 1 - - 
D - 1 - - - 
E - - - - - 
F - - - - - 


*** Testing DFS and BFS ***
DFS from B [B,C,D] 	: [D, C, B]
DFS from F     [F] 	: [F]
BFS from B [B,C,D] 	: [B, C, D]
BFS from F     [F] 	: [F]

*** Testing clone() ***
CLONED GRAPH (diamond): 

i B C D E F 
B - 1 - - - 
C 1 - 1 - - 
D - 1 - - - 
E - - - - - 
F - - - - - 


************* tests on the CS-COURSES graph **************
CS graph in DFS: 
(CS111, CS230, CS232, CS231, CS235, CS251, CS242, CS315, CS240):
[CS232, CS231, CS251, CS235, CS242, CS315, CS230, CS240, CS111]

CS graph in BFS: 
(CS111, CS230, CS240, CS232, CS231, CS235, CS251, CS242, CS315):
[CS111, CS230, CS240, CS232, CS231, CS235, CS251, CS242, CS315]

CS-courses with no pre-requisites : 
(MATH225, CS110, CS114, CS111):
[MATH225, CS110, CS114, CS111]

No followup courses:      
(CS232, CS231, CS240, CS251, CS242, CS315):
[CS232, CS231, CS240, CS251, CS242, CS315]

--------> ONE WAY to satisfy pre-req:
(MATH225, CS110, CS114, CS215, CS111, CS230, CS232, CS231, CS235, CS240, CS251, CS242, CS315):
[CS111, CS114, CS240, CS230, CS242, CS110, CS215, CS315, MATH225, CS235, CS251, CS231, CS232]

SAMPLE TESTING COMPLETE

*****************************************************

************* NEW TESTS FOR EXAM 3 *************
*****************************************************

TEST CASE1: testing isSink() and allSinks() on a simple graph

Is A a sink?(true)  true
Is B a sink?(false)  false
All sinks in this graph:(A,F)  [A, F]
*****************************************************

TEST CASE2: testing isSource() and allSources() on a simple graph

Is A a source?(true)  true
Is B a source?(false)  false
All sources in this graph:(A,F)  [A, F]
*****************************************************

TEST CASE3: testing listByPriority() on a simple graph(DAG)

Expected: A B C D E
[A, B, C, D, E]
*****************************************************

TEST CASE4: testing Traversals on a simple graph(tree)

Depth-First Traversal: (Expected: D E B F G C A)
[D, E, B, F, G, C, A]
Breadth-First Traversal: (Expected: A B C D E F G)
[A, B, C, D, E, F, G]
*****************************************************

TEST CASE5: SANITY TEST (TEST EVERYTHING
Original graph shows below:

i A B D C E F 
A - 1 - 1 - - 
B - - 1 - - - 
D - - - - 1 - 
C - 1 1 - 1 - 
E - - - - - - 
F - - - - - - 

Cloning...
Cloned graph shows below:

i A B D C E F 
A - 1 - 1 - - 
B - - 1 - - - 
D - - - - 1 - 
C - 1 1 - 1 - 
E - - - - - - 
F - - - - - - 


Is E a sink?(true)  true
Is B a sink?(false)  false
All sinks in this graph:(E F)  [E, F]

Is A a source?(true)  true
Is B a source?(false)  false
All sources in this graph:(A F)  [A, F]

Is F isolated?(true)  true

Creating a list by priority: (Expected: F A C B D E)
Note: F is isolated, doesnt matter.
[F, A, C, B, D, E]

Depth-First Traversal: (Expected: E D B C A)
[E, D, B, C, A]

Breadth-First Traversal: (Expected: A B C D E)
[A, B, C, D, E]
> 